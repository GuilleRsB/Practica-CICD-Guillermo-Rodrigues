version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Instalar dependencias
          command: pip install -r requirements.txt
      - run:
          name: Construir imagen Docker
          command: docker build -t dias-vividos-cli .
      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Instalar dependencias y herramientas de test
          command: |
            pip install -r requirements.txt
            pip install pytest pytest-cov
      - run:
          name: Ejecutar tests con cobertura
          command: pytest --cov=. --cov-report xml
      - store_artifacts:
          path: coverage.xml
          destination: coverage

  lint:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Instalar Flake8
          command: pip install flake8
      - run:
          name: Ejecutar lint
          command: flake8 .

  static_analysis:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Instalar Bandit
          command: pip install bandit
      - run:
          name: Ejecutar análisis estático
          command: bandit -r .

  sonar_scan:
    docker:
      - image: sonarsource/sonar-scanner-cli:latest
    steps:
      - checkout
      - run:
          name: Ejecutar SonarScanner
          command: |
            sonar-scanner \
              -Dsonar.projectKey=GuilleRsB_Practica-CICD-Guillermo-Rodrigues \
              -Dsonar.sources=. \
              -Dsonar.host.url=$SONAR_HOST_URL \
              -Dsonar.login=$SONAR_LOGIN \
              -Dsonar.organization=guillersb

  artifact:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Autenticarse en Docker Hub
          command: |
            echo "Autenticando en Docker Hub..."
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run:
          name: Construir y publicar imagen Docker
          command: |
            echo "Construyendo la imagen Docker..."
            docker build -t dias-vividos-cli .
            echo "Etiquetando la imagen..."
            docker tag dias-vividos-cli $DOCKERHUB_USERNAME/dias-vividos-cli:latest
            echo "Publicando la imagen en Docker Hub..."
            docker push $DOCKERHUB_USERNAME/dias-vividos-cli:latest
            echo "Guardando la imagen en un archivo tar..."
            docker save dias-vividos-cli > dias-vividos-cli.tar
      - store_artifacts:
          path: dias-vividos-cli.tar
          destination: artifact

workflows:
  version: 2
  build_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - lint:
          requires:
            - build
      - static_analysis:
          requires:
            - build
      - sonar_scan:
          requires:
            - build
      - artifact:
          filters:
            branches:
              only: main
          requires:
            - test
            - lint
            - static_analysis
            - sonar_scan
